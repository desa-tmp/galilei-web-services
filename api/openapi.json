{
  "openapi": "3.0.3",
  "info": {
    "title": "api",
    "description": "",
    "license": {
      "name": ""
    },
    "version": "0.1.0"
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "routes::auth"
        ],
        "operationId": "login",
        "requestBody": {
          "description": "login data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/AuthResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationResponse"
          },
          "409": {
            "$ref": "#/components/responses/AlreadyExistsResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        },
        "security": [
          {}
        ]
      }
    },
    "/auth/logout": {
      "delete": {
        "tags": [
          "routes::auth"
        ],
        "operationId": "logout",
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "routes::auth"
        ],
        "operationId": "register",
        "requestBody": {
          "description": "registration data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/AuthResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationResponse"
          },
          "409": {
            "$ref": "#/components/responses/AlreadyExistsResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        },
        "security": [
          {}
        ]
      }
    },
    "/auth/verify": {
      "get": {
        "tags": [
          "routes::auth"
        ],
        "operationId": "verify",
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/galaxies": {
      "get": {
        "tags": [
          "routes::galaxy"
        ],
        "operationId": "get_all_galaxies",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GalaxiesList"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "post": {
        "tags": [
          "routes::galaxy"
        ],
        "operationId": "create_galaxy",
        "requestBody": {
          "description": "data for creating the galaxy",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGalaxyData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/GalaxyCreated"
          },
          "400": {
            "$ref": "#/components/responses/ValidationResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "409": {
            "$ref": "#/components/responses/AlreadyExistsResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/galaxies/{galaxy_id}": {
      "get": {
        "tags": [
          "routes::galaxy"
        ],
        "operationId": "get_galaxy",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SpecificGalaxy"
          },
          "400": {
            "$ref": "#/components/responses/ValidationResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "409": {
            "$ref": "#/components/responses/AlreadyExistsResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "routes::galaxy"
        ],
        "operationId": "update_galaxy",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "data for updating the galaxy",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGalaxyData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/GalaxyUpdated"
          },
          "400": {
            "$ref": "#/components/responses/ValidationResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "409": {
            "$ref": "#/components/responses/AlreadyExistsResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "delete": {
        "tags": [
          "routes::galaxy"
        ],
        "operationId": "delete_galaxy",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GalaxyDeleted"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/galaxies/{galaxy_id}/planets": {
      "get": {
        "tags": [
          "routes::planet"
        ],
        "operationId": "get_all_planets",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PlanetsList"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "post": {
        "tags": [
          "routes::planet"
        ],
        "operationId": "create_planet",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "data for creating the planet",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanetData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PlanetCreated"
          },
          "400": {
            "$ref": "#/components/responses/ValidationResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "409": {
            "$ref": "#/components/responses/AlreadyExistsResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/galaxies/{galaxy_id}/planets/{planet_id}": {
      "get": {
        "tags": [
          "routes::planet"
        ],
        "operationId": "get_planet",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "planet_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SpecificPlanet"
          },
          "400": {
            "$ref": "#/components/responses/ValidationResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "409": {
            "$ref": "#/components/responses/AlreadyExistsResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "routes::planet"
        ],
        "operationId": "update_planet",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "planet_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "data for updating the planet",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanetData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PlanetUpdated"
          },
          "400": {
            "$ref": "#/components/responses/ValidationResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "409": {
            "$ref": "#/components/responses/AlreadyExistsResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "delete": {
        "tags": [
          "routes::planet"
        ],
        "operationId": "delete_planet",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "planet_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PlanetDeleted"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/galaxies/{galaxy_id}/stars": {
      "get": {
        "tags": [
          "routes::star"
        ],
        "operationId": "get_all_stars",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StarsList"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "post": {
        "tags": [
          "routes::star"
        ],
        "operationId": "create_star",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "data for creating the star",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStarData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/StarCreated"
          },
          "400": {
            "$ref": "#/components/responses/ValidationResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "409": {
            "$ref": "#/components/responses/AlreadyExistsResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/galaxies/{galaxy_id}/stars/{star_id}": {
      "get": {
        "tags": [
          "routes::star"
        ],
        "operationId": "get_star",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "star_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "watch",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SpecificStar"
          },
          "400": {
            "$ref": "#/components/responses/ValidationResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "409": {
            "$ref": "#/components/responses/AlreadyExistsResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "routes::star"
        ],
        "operationId": "update_star",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "star_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "data for updating the star",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStarData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/StarUpdated"
          },
          "400": {
            "$ref": "#/components/responses/ValidationResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "409": {
            "$ref": "#/components/responses/AlreadyExistsResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "delete": {
        "tags": [
          "routes::star"
        ],
        "operationId": "delete_star",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "star_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StarDeleted"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/galaxies/{galaxy_id}/stars/{star_id}/vars": {
      "get": {
        "tags": [
          "routes::var"
        ],
        "operationId": "get_all_star_vars",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "star_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StarVariablesList"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "post": {
        "tags": [
          "routes::var"
        ],
        "operationId": "create_star_var",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "star_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "data for creating the star",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVariableData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/StarVariableCreated"
          },
          "400": {
            "$ref": "#/components/responses/ValidationResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "409": {
            "$ref": "#/components/responses/AlreadyExistsResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/galaxies/{galaxy_id}/stars/{star_id}/vars/{variable_id}": {
      "get": {
        "tags": [
          "routes::var"
        ],
        "operationId": "get_star_var",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "star_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "variable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SpecificStarVariable"
          },
          "400": {
            "$ref": "#/components/responses/ValidationResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "409": {
            "$ref": "#/components/responses/AlreadyExistsResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "routes::var"
        ],
        "operationId": "update_star_var",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "star_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "variable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "data for updating the star",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStarData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/StarVariableUpdated"
          },
          "400": {
            "$ref": "#/components/responses/ValidationResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "409": {
            "$ref": "#/components/responses/AlreadyExistsResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      },
      "delete": {
        "tags": [
          "routes::var"
        ],
        "operationId": "delete_star_var",
        "parameters": [
          {
            "name": "galaxy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "star_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "variable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StarVariableDeleted"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "routes::user"
        ],
        "operationId": "me",
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizeResponse"
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Credentials"
          },
          {
            "type": "object",
            "required": [
              "remember"
            ],
            "properties": {
              "remember": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "ConnectPlanetToStar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "CreateGalaxyData": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "CreatePlanetData": {
        "type": "object",
        "required": [
          "name",
          "capacity",
          "path",
          "star"
        ],
        "properties": {
          "capacity": {
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "path": {
            "type": "string",
            "minLength": 1
          },
          "star": {
            "$ref": "#/components/schemas/ConnectPlanetToStar"
          }
        }
      },
      "CreateStarData": {
        "type": "object",
        "required": [
          "name",
          "nebula",
          "public_domain",
          "private_domain",
          "port"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "nebula": {
            "type": "string",
            "format": "uri"
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "maximum": 65535,
            "minimum": 1
          },
          "private_domain": {
            "$ref": "#/components/schemas/DomainName"
          },
          "public_domain": {
            "$ref": "#/components/schemas/DomainName"
          }
        }
      },
      "CreateVariableData": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "value": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "Credentials": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Password"
          },
          {
            "type": "object",
            "required": [
              "username"
            ],
            "properties": {
              "username": {
                "type": "string"
              }
            }
          }
        ]
      },
      "DomainName": {
        "type": "object",
        "properties": {
          "subdomain": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          }
        }
      },
      "ErrorMessage": {
        "type": "object",
        "required": [
          "status_code",
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "status_code": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "Galaxy": {
        "type": "object",
        "required": [
          "id",
          "name",
          "user_id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Password": {
        "type": "object",
        "required": [
          "password"
        ],
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "Planet": {
        "type": "object",
        "required": [
          "id",
          "name",
          "capacity",
          "path",
          "galaxy_id"
        ],
        "properties": {
          "capacity": {
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          "galaxy_id": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "path": {
            "type": "string",
            "minLength": 1
          },
          "star_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "Star": {
        "type": "object",
        "required": [
          "id",
          "name",
          "nebula",
          "port",
          "galaxy_id"
        ],
        "properties": {
          "galaxy_id": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "nebula": {
            "type": "string",
            "format": "uri"
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "maximum": 65535,
            "minimum": 0
          },
          "private_domain": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "public_domain": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          }
        }
      },
      "StarStatus": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "status"
            ],
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "Active"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "status"
            ],
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "Failure"
                ]
              }
            }
          }
        ]
      },
      "UpdateGalaxyData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          }
        }
      },
      "UpdatePlanetData": {
        "type": "object",
        "properties": {
          "capacity": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "maximum": 2147483647,
            "minimum": 0
          },
          "name": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "path": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "star": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConnectPlanetToStar"
              }
            ],
            "nullable": true
          }
        }
      },
      "UpdateStarData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "nebula": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "maximum": 65535,
            "minimum": 1
          },
          "private_domain": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainName"
              }
            ],
            "nullable": true
          },
          "public_domain": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainName"
              }
            ],
            "nullable": true
          }
        }
      },
      "UpdateVariableData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "value": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Variable": {
        "type": "object",
        "required": [
          "id",
          "name",
          "value",
          "star_id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "star_id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "responses": {
      "AlreadyExistsResponse": {
        "description": "The resource already exists",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessage"
            }
          }
        }
      },
      "AuthResponse": {
        "description": "user authorized from session token",
        "headers": {
          "Set-Cookie": {
            "schema": {
              "type": "string"
            },
            "description": "The session ID is returned in a cookie named `session`. You need to include this cookie in subsequent requests."
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "user"
              ],
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "GalaxiesList": {
        "description": "all user galaxies",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Galaxy"
              }
            }
          }
        }
      },
      "GalaxyCreated": {
        "description": "galaxy successfully created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Galaxy"
            }
          }
        }
      },
      "GalaxyDeleted": {
        "description": "galaxy successfully deleted",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Galaxy"
            }
          }
        }
      },
      "GalaxyUpdated": {
        "description": "galaxy successfully updated",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Galaxy"
            }
          }
        }
      },
      "InternalErrorResponse": {
        "description": "An internal error occurred",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessage"
            }
          }
        }
      },
      "NotFoundResponse": {
        "description": "Requested resources not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessage"
            }
          }
        }
      },
      "PlanetCreated": {
        "description": "planet successfully created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Planet"
            }
          }
        }
      },
      "PlanetDeleted": {
        "description": "planet successfully deleted",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Planet"
            }
          }
        }
      },
      "PlanetUpdated": {
        "description": "planet successfully updated",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Planet"
            }
          }
        }
      },
      "PlanetsList": {
        "description": "all planets in the galaxy",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Planet"
              }
            }
          }
        }
      },
      "SpecificGalaxy": {
        "description": "specific galaxy with all its stars and planets",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "galaxy",
                "stars",
                "planets"
              ],
              "properties": {
                "galaxy": {
                  "$ref": "#/components/schemas/Galaxy"
                },
                "planets": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Planet"
                  }
                },
                "stars": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Star"
                  }
                }
              }
            }
          }
        }
      },
      "SpecificPlanet": {
        "description": "specific planet",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Planet"
            }
          }
        }
      },
      "SpecificStar": {
        "description": "specific star in the galaxy",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Star"
            }
          },
          "text/event-stream": {
            "schema": {
              "$ref": "#/components/schemas/StarStatus"
            }
          }
        }
      },
      "SpecificStarVariable": {
        "description": "specific star variable",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Variable"
            }
          }
        }
      },
      "StarCreated": {
        "description": "star successfully created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Star"
            }
          }
        }
      },
      "StarDeleted": {
        "description": "star successfully deleted",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Star"
            }
          }
        }
      },
      "StarUpdated": {
        "description": "star successfully updated",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Star"
            }
          }
        }
      },
      "StarVariableCreated": {
        "description": "star variable successfully created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Variable"
            }
          }
        }
      },
      "StarVariableDeleted": {
        "description": "star variable successfully deleted",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Variable"
            }
          }
        }
      },
      "StarVariableUpdated": {
        "description": "star variable successfully updated",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Variable"
            }
          }
        }
      },
      "StarVariablesList": {
        "description": "all variables of a star",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Variable"
              }
            }
          }
        }
      },
      "StarsList": {
        "description": "all stars in the galaxy",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Star"
              }
            }
          }
        }
      },
      "UnauthorizeResponse": {
        "description": "User not authorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessage"
            }
          }
        }
      },
      "UserResponse": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "ValidationResponse": {
        "description": "The body of the request contains incorrect data",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessage"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "session_token": {
        "type": "apiKey",
        "in": "cookie",
        "name": "session"
      }
    }
  },
  "security": [
    {
      "session_token": []
    }
  ]
}